# basic model example
(1) select data for modeling
        import pandas as pd
        melbourne_file_path = '../input/melbourne-housing-snapshot/melb_data.csv'
        melbourne_data = pd.read_csv(melbourne_file_path) 
        melbourne_data = melbourne_data.dropna(axis=0)
        //finish loading data and display colunms to select one as the prediction target
        melbourne_data.columns
        y = melbourne_date.Price
(2) choose features
        melbourne_features = ['Rooms', 'Bathroom', 'Landsize', 'Lattitude', 'Longtitude']
        X = melbourne_data[melbourne_features]
        X.describe()
        X.head()
(3) build model
        from sklearn.tree import DecisionTreeRegressor
        melbourne_model = DecisionTreeRegressor(random_state = 1)
        melbourne_model.fit(X, y)
(4) make predictions
        melbourne_head_predictions = melbourne_model.predict(X.head())
        
        
# model validation
// introduce a method to split training data and test data
    from sklearn.metrices import mean_absolute_error
    from sklearn.model_selection import train_test_split
    train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 1)
    melbourne_model = DecisionTreeRegressor(random_state = 1)
    melbourne_model.fit(train_X, train_y)
    val_predictions = melbourne.predict(val_X)
    mae = mean_absolute_error(val_y, val_predictions)
    
! If we'd get the top few rows of predictions, we should use val_predictions[:5]  --- because val_predictions is a list
! If we'd get the top few rows of validation X, we should use X.head()            --- because X is still a DataFrame with only one column
